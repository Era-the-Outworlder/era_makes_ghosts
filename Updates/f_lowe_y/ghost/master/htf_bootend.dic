//---------Booting and Ending--------
//This .dic file contains booting and ending dialogue, as well as several other functions.

//----OnfirstBoot----
//~~~~Runs after new installation of ghost, only if ghost was installed from .nar file. Also declares and initialises variables
//~~~~I've used variables without declaring them first here and it was a nightmare at the time. <3Era~~~~


OnfirstBoot
{
	OnNotifyUserInfo
	--
 	lastTalk = "" //This is part of how chained conversations work (see aitalk.dic).
	passmin = 0 
	passsec = 0 // These two keep track of the time.
 	mikireflag       = 0	// Determines behavior at certain points.
 	aitalkinterval = 400 //Their default talk rate.
 	talktime = "5 minutes" //How the value aitalkinterval will display in the config menu.
	nowshell = "master" //init as default shell
	
	deleteshitai = "OFF" //Sets whether or not the user can uninstall the ghost to "OFF".
	
	username         = "USER" //This sets a temporary name for the user.
	birthdayprint = "????" //A temporary value for the user's birthday.
	
	//wisott
	installinfo = ("%(year)","%(month)","%(day)","%(hour)","%(minute)","%(second)","%(OnGhostVer)")
	
	silentMode = "OFF" //does not start in silent mode
	canDesktopEye = "OFF" //does not start off commenting on open programs
	verBalete = "ON" //DOES start with recycle bin confirmation on

	//The following are global variables for F_lowe_y's interactions.
	stroke = 0	// Sets being-pet state to zero.
	ellVee = 1
	HP = 20
	EXP = 0
	knifeTime = 0
	killCount = 0
	resetCount = 0
	
	--
	if reference0 == 0 //Don't touch this line.
 	{
		firstBoot = 1
		"\0\s[3]\_v[mus\HELP_text.mp3]\t * (Flowey is attempting to introduce you to the SSP Ghost system.)\w8\w8\n\s[3]\_v[mus\sound_FLOWEY.mp3] * Howdy!\n\n[half]"
		--
		OnTeachPronouns
 	}
	else
 	{
 		// "\0\s[21]\_v[mus\sound_FLOWEY.mp3] * Returned. Why?"
		
		"\0\s[21]\_v[mus\HELP_text.mp3] F_lowe_y does not remember being uninstalled. \n (But you remember doing it, don't you %(menuNName)?"
		--
		OnTeachPronouns
 	}
}





//--timeslot

//This is another unique function to tell what time of day it is. This is used for specialized dialogue related to the day.

GetTimeSlot
{
	if hour >= 0 && hour <= 4
	{
		"weehours"
	}
	if hour >= 5 && hour <= 8
	{
		"earlymorning"
	}
	elseif hour >= 9 && hour <= 11
	{
		"morning"
	}
	elseif hour >= 12 && hour <= 14
	{
		"lunch"
	}
	elseif hour >= 15 && hour <= 17
	{
		"afternoon"
	}
	elseif hour >= 18 && hour <= 20
	{
		"evening"
	}
	elseif hour >= 21 && hour <= 24
	{
		"latenight"
	}
	else
	{
		"error"
	}
}

//--dayslot

//Like the above, but to find out what day it is. You can primarily use this for specialized dialogue on certain days, like the user's birthday.

GetDaySlot
{
	"%(month)month %(day)day"
}


//-----------------------Normal Booting----------------------------

//From this point on, the dialogue will be for any normal boot of your ghost. You can specialize this for certain days or times if you like, or if you're uninterested, leave it very simple.


//--OnBoot

//As you can probably guess, OnBoot runs when you boot your ghost.
//*********************Advanced User Info*******************************
//You can also stick any values you want to reset on boot into their own function, like "BootReset", then run BootReset instead during boot so it's a bit less unwieldy.
//***********************************************************************

OnBoot
 {
	OnNotifyUserInfo
	lastTalk = "" 
	passhour = 0
	passmin = 0
	passsec = 0
	dayslot = GetDaySlot
	timeslot = GetTimeSlot
	
	//turns on detection of other ghosts' speech
	//Neutral pose.
 	"\0\s[0]\![set,otherghosttalk,true]" 
	--
	
	if dayslot == userbirthday 
	
	{
				"\s[3]\_v[mus\sound_FLOWEY.mp3] * It's %(bornmonthprint) %(borndayprint).\w8\n * Happy birthday, %(username)." 
				--
				"\s[0]\e"
				
	}
	
	elseif dayslot == "6month 6day" 
	
	{
				"\s[3]\_v[mus\sound_FLOWEY.mp3] * Today. June 6th."
				--
				"\s[0]\e"
	}
	elseif dayslot == "7month 4day"
	{
				"\s[3]\_v[mus\sound_FLOWEY.mp3] * Fourth. 4th. Fourth. July."
				--
				"\s[0]\e"
				
	}
	else
	{
		"%(normalboottalk)" //If none of the days above match the current date, the ghost instead will go down to the next function, normalboottalk.
	}
}


//--normalboottalk

//normalboottalk will vary their dialogue in a few different ways depending on the time and weekday.

normalboottalk
{
	if weekday == 6 && hour >= 19 
		{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * It's Saturday night."
		}
	elseif RAND(100) < 40 
		{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * (Gurgling noises)"
	
		}
 	else
 	{
		timeslot = "%(GetTimeSlot)"
		if timeslot == "earlymorning" 
		{
		"\0\s[3] * Early. "
		
		}
		elseif timeslot == "morning"
		{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * Bleah. "
		
		}
		elseif timeslot == "lunch"
		{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * Eat."
		}
		elseif timeslot == "afternoon"
		{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * Afternoon. "
		}
		elseif timeslot == "evening"
		{
 		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * Late. "
		}
		elseif timeslot == "latenight"
		{
 		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * Laaaaaaate."
		
		}
		else //the last timeslot we haven't done is weehours, which is what's under here.
		{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * %(lateearly)\w8"
		
		}
	}
	--
	"\s[0]\e"
}


//----OnClose

//OnClose runs when you close your ghost. 

OnClose
{
	if passmin >= 5	
		{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * Bye\w8\w8"	
		"\0\s[3]\_v[mus\HELP_text.mp3] * (You tell Flowey you'll see him later.)\w8\w8"	
 		
 		}
 	else 
 	{
 		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * [flowey_greeting_string] BYE\w8\w8"
		
 	}
 	--
	"\-" 
}

OnCloseAll
{
	"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * G%(o)%(o)%(d)-%(b)%(y)%(e)\w8\w8"	
	"\0\s[3]\_v[mus\HELP_text.mp3] * (You tell Flowey you'll see everyone later.)\w8\w8"	
	--
	"\-" 

}

 //--------State Changing--------
 //From here on, most of the dialogue will have to do with changing shells, ghosts, or states in some way.
 
 
 //----OnWindowStateMinimize

//This will run when you minimize them.

 OnWindowStateMinimize
 {
	"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * Tiny\w8\w8"
	"\0\s[3]\_v[mus\HELP_text.mp3] * (Flowey will hide for now.)\w8\w8"
	--
	"\s[0]\e"
}

//--OnWindowStateRestore

OnWindowStateRestore
 {
	"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * Back\w8\w8"
	"\0\s[3]\_v[mus\HELP_text.mp3] * (Flowey has returned.)\w8\w8"
	--
	"\s[0]\e"
}


//--OnGhostChanging

OnGhostChanging
 {
	if reference0 == "f_lowe_y" 
	{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * Re-re-re-re-re-re-re\w8\w8 LOADING\w3.\w3.\w3."
		"\0\s[3]\_v[mus\HELP_text.mp3] * (The ghost of Flowey is reloading.)"
	}
 	else //If you're switching to another Ghost.
	{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * LOADING %(reference0). \w8Bye.\w8\w8"
		"\0\s[3]\_v[mus\HELP_text.mp3] * (You decide to switch to someone else.)"	
	}
	--
	"\s[0]\e"
}


//--OnGhostChanged

//A sister to the above, this runs after the ghost has either reloaded itself, or when you switch from another ghost to this ghost.

OnGhostChanged
{
	"\0\s[3]\![set,otherghosttalk,true]" //this sets up their default poses
	--
	if reference0 == "f_lowe_y" //As above, this should be the name of your ghost as in install.txt or descript.txt.
	{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * LOADED"
		"\0\s[3]\_v[mus\HELP_text.mp3] * (Ghost %(reference0) reloaded.)"
	}
	else //If you're switching to them from another ghost...
	{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * %(reference0)..."
		"\0\s[3]\_v[mus\HELP_text.mp3] * (Ghost '%(reference0)' unloaded.)"
	}
	--
	"\s[0]\e"
}

// When THIS ghost is called. ref0 = body/sakura/kero of calling ghost, ref2 name of calling ghost, ref3 path of call, ref 7 name of called ghost.
OnGhostCalled
{
	{
		reference0 = TOUPPER(reference0)
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * HELLO %(reference0). "
	}
	"\0\s[3]\_v[mus\HELP_text.mp3] * (Ghost %(reference0) is already open.)"
}

// When another ghost is BEING called from THIS ghost's r-click menu (happens before new ghost loads)
// ref0 = body of called ghost, ref1 = call method, ref2 = name of called ghost, ref3 = path of called ghost
OnGhostCalling
{
	"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * HELLO %(reference0). "
}

// When another ghost is called from THIS ghost's r-click menu (happens after new ghost completes boot function)
// ref0 = body of called ghost, ref1 = boot script, ref2 = name of called ghost, ref7 = name of loaded shell

OnGhostCallComplete
{
	
	if "Hapax" _in_ reference7
	{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * HELLO HAPAX LEGOMENOM. "
	}
	else
	{
		reference0 = TOUPPER(reference0)
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * HELLO %(reference0). "
	}
}

// When another ghost is called from a DIFFERENT ghost's r-click menu (happens after new ghost completes boot function)
// ref0 = body of called ghost, ref1 = boot script, ref2 = name of called ghost, ref7 = name of loaded shell

OnOtherGhostBooted
{
	if "Hapax" _in_ reference7
	{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * HELLO HAPAX LEGOMENOM. "
	}
	else
	{
		reference0 = TOUPPER(reference0)
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * HELLO %(reference0). "
	}
}

// This fucker just had to be different...
// Occurs when switching between other ghosts.

// Ref0 = main body of closed ghost. Ref1 = main body of opened ghost. Ref2 = end Script closed ghost. Ref3 = boot Script opened ghost. Ref4 = closed ghost name. Ref5 = opened ghost name. Ref14 = shell name of closed ghost. Ref15 = shell name of opened ghost.

OnOtherGhostChanged
{

	"%(referenceTest)"
	// if "Hapax" _in_ reference15
	// {
		// reference0 = TOUPPER(reference0)
		// "\0\s[3]\_v[mus\sound_FLOWEY.mp3] * GOOD-BYE %(reference0). \n\n   HELLO HAPAX LEGOMENOM. "
	// }
	// elseif "Hapax" _in_ reference14
	// {
		// reference0 = TOUPPER(reference0)
		// "\0\s[3]\_v[mus\sound_FLOWEY.mp3] * GOOD-BYE HAPAX LEGOMENOM. \n\n   HELLO %(reference1). "
	// }
	// else
	// {
		// reference0 = TOUPPER(reference0)
		// "\0\s[3]\_v[mus\sound_FLOWEY.mp3]  * GOOD-BYE %(reference0). \n\n   HELLO %(reference1). "
	// }
}


// When another ghost is called from a DIFFERENT ghost's r-click menu (happens after new ghost completes boot function)
// ref0 = body of closed ghost, ref1 = last script, ref2 = name of closed ghost, ref7 = name of loaded shell

OnOtherGhostClosed
{
	if "Hapax" _in_ reference7
	{
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * GOODE-BYE HAPAX LEGOMENOM. "
	}
	else
	{
		reference0 = TOUPPER(reference0)
		"\0\s[3]\_v[mus\sound_FLOWEY.mp3] * GOOD-BYE %(reference0). "
	}
}
// "%(referenceTest)"


//--OnShellChanging

//This will run when you change your ghost's shell.

OnShellChanging
 {
	if reference0 == "Hypothetical Shell that doesn't actually exist" //reference0 in OnShellChanging is the name of the shell you're swapping to. 
	{
		"\0\s[12] * %(errorMsg)\e"
	}
	else //if you don't have any specific dialogue for a specific shell
	{
		"\0\s[3] * (It seems someone out there has made a new skin for the flower to wear.)\n\n\n\f[color255,0,0]* (Interesting.)\e"
	}
 }
 
