
// Name, Pronouns, Birthdate, all in one.
// Written by Era the Outworlder https://era-the-outworlder.github.io/era_makes_ghosts/index.html


// This was written expecting a variable (here called firstBoot) to be set to indicate if OnTeachName was called from OnFirstBoot, starting a sequence that gets the user's name, pronouns, and birthdate consecutively. In this code, "firstBoot == 1" means that this is the first time the ghost has been installed, or in OnFirstBoot "reference0 == 0". "firstBoot == 2" means that this in NOT the first time the ghost has been installed, or in OnFirstBoot "reference0" having any other value than 0.

// ----- OnNotifyUserInfo -----
// This gets the info the user may have set in SSP's settings and separates it into global variables.
// OnNotifyUserInfo is an event built into SSP.
OnNotifyUserInfo
{

	menuNName = SHIORI3FW.UserName
	menuRName = SHIORI3FW.UserNameFull
	menuBYear = TOSTR(SHIORI3FW.UserBirthday[0])
	menuBMonth = TOSTR(SHIORI3FW.UserBirthday[1])
	menuBDay = TOSTR(SHIORI3FW.UserBirthday[2])	
}

// ----- OnTeachName ----- 
//This is the first function called when a name entry or change is started

OnTeachName	
{
	if reference0 == "menu" //function was called from User Config or other menu with \q[Caption,OnTeachName,menu]
		{	
			if !username
			{
				"\c\t"
				--
				"This is the dialogue for SETTING one's username from the User Settings menu. \![open,inputbox,OnNameTeach,-1]"
			}
			else
			{
				"\c\t"
				--
				"This is the dialogue for CHANGING one's username from the User Settings menu. \![open,inputbox,OnNameTeach,-1]"
			}
		}
	else //function called from anywhere else
		{
			"\c\t"
			--
			"What is your name? \![open,inputbox,OnNameTeach,-1]\s[0]"
		}
}


// -- OnNameTeach --
//This is where the user inputs their name and the ghost analyzes it.

OnNameTeach
{
	_tempname = TOSTR(reference0) //this stores the name value from reference0 in _tempname
	
	// There is surely a better way to strip out punctuation, but I haven't got it in my head
	reference0 = TOLOWER(reference0) //changes it to lowercase
	reference0 = REPLACE(reference0," ","") //removes spaces
	reference0 = REPLACE(reference0,".","") //removes periods
	reference0 = REPLACE(reference0,"-","") //removes dashes
	reference0 = REPLACE(reference0,"_","") //removes underscores
	
	
	//	"sakuraname" is the baseware Property System value for sakura.name as set in descript.txt
	// "name" is the name of the ghost, "sakuraname2" should be the sakura.name2 value, if set. "keroname" should be kero.name. AFAIK, there are no property system variables for additional characters
	
	_selfname = TOSTR(sakuraname)
	
	if _tempname == _selfname //Checks if the users name is the same as the ghost's Sakura-name
	{
		"Oh, that is my name too.\n"
		--
		"\![*] \q[Change,OnTeachName]\n \n[-100]\f[align,right]\![*] \q[Keep,OnNameDone,keepghostname,%(_tempname)]\n"
	}
	
	elseif reference0 == "" //This is if the user doesn't put in a name at all or puts one that is only spaces, periods, dashes, or uderscores since that'd also get awkward in dialogue.
	{
		username = "Not A Valid Name" //this sets the user's name to some Value
	
		"That is not an acceptable name. I can call you %(username). Is there something else I can call you?\n"
		--
		"\![*] \q[Change,OnTeachName]\n \n[-100]\f[align,right]\![*] \q[Keep,OnNameDone,keepname]\n"
	}
	// The above can be copied/modified to make any number of responses to names that the ghost does not want to use
	
	elseif _tempname == username //checks against existing username
	{
		
		"That is already your username. Are you trying to change something else? \_w[500]\n[150]"
		--
		
		"\![*] \q[Yes,OnHonorificChoice]\n \n[-100]\f[align,right]\![*] \q[No,OnNameDone,repeat]\n"
	}
	
	elseif reference0 == "Hypothetical Acceptable Name" //If there is a name the ghost will simply accept
	{
		username = _tempname
		
		"Specific Comment Responding to that Name\n[200]"
		--
		"Do you want me to use a title or honorific when addressing you? \_w[500]\n[150]"
		--
		"\![*] \q[Yes,OnHonorificChoice]\n \n[-100]\f[align,right]\![*] \q[No,OnNameDone]\n"
	}
	else //if the user put in something not specified above, ie a proper name the ghost can use. 
	{
		username = _tempname
		
		"Do you want me to use a title or honorific when addressing you? \_w[500]\n[150]"
		--
		"\![*] \q[Yes,OnHonorificChoice]\n \n[-100]\f[align,right]\![*] \q[No,OnNameDone]\n"
	}
}


// This version of UserInfo does not separate honorifics by gender. Any number of options can be added.
OnHonorificChoice
{
	if reference0 == 0
	{
		"\![*] \q[Mx.,OnHonorificChoice,1]\n/
		\![*] \q[Mr.,OnHonorificChoice,2]\n/
		\![*] \q[Ms.,OnHonorificChoice,3]\n/
		\![*] \q[Mrs.,OnHonorificChoice,4]\n/
		\![*] \q[-ssi,OnHonorificChoice,5]\n/
		\![*] \q[-san,OnHonorificChoice,6]\n/
		\![*] \q[No title,OnNameDone]"
	}
	else
	{
		case reference0
		{
			when 1
			{username = "Mx. " + username}
			when 2
			{username = "Mr. " + username}
			when 3
			{username = "Ms. " + username}
			when 4
			{username = "Mrs. " + username}
			when 5
			{username = username + "-ssi"}
			when 6
			{username = username + "-san"}
		}
		--
		OnNameDone
	}
}

// ----- OnNameDone -----
// Signifies that it's done, moves on to wherever else


// In this function, if ref0 is "keepname", the function was called from a Change/Keep dialogue above where the ghost reacted negatively in some way (ie, asked the user to pick a different name or gave them a different name with or without telling the user) 
	
// The end of each dialogue that will continue on to OnTeachPronouns is ended with "\b[-1]" to hide the balloon and "\c" to clear the text. timerraise is used to force the ghost to wait 1 second before moving on to the next function in the OnFirstBoot sequence.

	

OnNameDone
{	
	if reference0 == "keepghostname" // if user has the same name as the ghost
	{
		username = reference1
		if firstBoot == 1 || firstBoot == 2 //this checks for the flag that was set during the firstBoot sequence
		{
			"Name Confirmed as %(username) \_w[500] \b[-1]\c"
			--
			"\![timerraise,1000,1,OnTeachPronouns]"
		}
		else
		{
			"Different Name Confirmation. Likely Name Changed From Menu. \_w[500] \e"
		}
	}
	elseif reference0 == "keepname"
	{
		if firstBoot == 1 || firstBoot == 2 //this checks for the flag that was set during the firstBoot sequence
		{
			"Name Confirmation Dialogue. keepname. \_w[500] \b[-1]\c"
			--
			"\![timerraise,1000,1,OnTeachPronouns]"
		}
		else
		{
			"Different Name Confirmation. Likely Name Changed From Menu. \_w[500] \e"
		}
	}
	elseif reference0 == "repeat" //called only if there was an existing value for username somehow, and the user entered the same name again.
	{
		if firstBoot == 1 || firstBoot == 2 
		{
			"Name Confirmation Dialogue. repeat. \_w[500] \b[-1]\c"
			--
			"\![timerraise,1000,1,OnTeachPronouns]"
		}
		else
		{
			"Same Name Confirmation. Likely An Accident. \_w[500] \e"
		}
	}
	else
	{
		if firstBoot == 1 
		{
			"Name Confirmation Dialogue. other firstBoot1. \_w[500] \b[-1]\c"
			--
			"\![timerraise,1000,1,OnTeachPronouns]"
		}
		elseif firstBoot == 2
		{
			"Name Confirmation Dialogue. firstBoot2. \_w[500] \b[-1]\c"
			--
			"\![timerraise,1000,1,OnTeachPronouns]"
		}
		else
		{
			"Name Confirmation Dialogue. other. \_w[500]\e"
		}
	}
}

// ----- OnTeachPronouns -----
// This is called to set/change the user's pronouns

OnTeachPronouns
{
	"\t\c\b2Please select your pronouns:\_w[500]\n[300]\_q/
	\n[300]/
	\![*] \q[He-His-Him,OnSetPronouns,1]\n/
	\![*] \q[She-Her-Her,OnSetPronouns,2]\n/	
	\![*] \q[They-Their-Them,OnSetPronouns,3]\n/
	\![*] \q[Other,OnTeachCustomPronoun]"

}	

OnSetPronouns
{
	if reference0 == 1
	{
		nomPro = "he"
		oblPro = "him"
		posPro = "his"
	}
	elseif reference0 == 2
	{
		
		nomPro = "she"
		oblPro = "her"
		posPro = "her"
	}
	elseif reference0 == 3
	{
		
		nomPro = "they"
		oblPro = "them"
		posPro = "their"
	}
	elseif reference0 == 0
	{
		nomPro = reference1
		oblPro = reference2
		posPro = reference3
	}
	--
	
	if firstBoot == 1 || firstBoot == 2
	{
		"You have listed your pronouns as %(nomPro), %(oblPro), and %(posPro).\_w[500]\n\b[-1]\c"
		--
		"\![timerraise,1000,1,OnGetBirthday]"	
	}
	else
	{
		"You have listed your pronouns as %(nomPro), %(oblPro), and %(posPro).\_w[500]"
	}

}


OnTeachCustomPronoun
{
	"Enter your nominative pronoun, ex.'they' \![open,inputbox,OnNominativeTeach,-1]"
}

//---- Teaching each pronoun -----

OnNominativeTeach
{
	_nounN = reference0 //this stores the pronoun value temporarily in reference0

	_check = REPLACE(reference0," ","")
	if _check  == "" // This is if the user doesn't enter any text
	{
		"You did not type anything into the box. Whoops! \![open,inputbox,OnNominativeTeach,]"
	}
	else //Continuing on
	{
		"Enter your oblique pronoun, ex.'them' \![open,inputbox,OnObliqueTeach,--reference=%_nounN]"
	}
}


OnObliqueTeach
{
	_nounO = reference0 //this stores the pronoun value temporarily in reference0
	_nounN = reference2
	_check = REPLACE(reference0," ","")
	if _check  == "" // This is if the user doesn't enter any text
	{
		"You did not type anything into the box. Whoops! \![open,inputbox,OnObliqueTeach,--reference=%_nounN]"
	}
	else //Continuing on
	{
		"Enter your possessive pronoun, ex.'their' \![open,inputbox,OnPossessiveTeach,--reference=%_nounN,--reference=%_nounO]"
	}
}


OnPossessiveTeach
{

	_nounP = reference0 //this stores the pronoun value temporarily in reference0
	_nounO = reference3
	_nounN = reference2
	_check = REPLACE(reference0," ","")
	if _check  == "" // This is if the user doesn't enter any text
	{
		"You did not type anything into the box. Whoops!\![open,inputbox,OnPossessiveTeach,--reference=%_nounN,--reference=%_nounO]"
	}
	else //Continuing on
	{
		"You entered %(_nounN), %(_nounO), and %(_nounP).\n Does that seem right? \_w[500]\n[150]/
		\_q\![*]\q[Looks good!,OnSetPronouns,0,%_nounN,%_nounO,%_nounP]\n/
		\![*]\q[Let's try that again...,OnTeachCustomPronoun]"
			
	}
}


// ----- OnGetBirthday -----
// Function called to have the user input their birthday. 
// Variable names retained for compatibility w/GT Template ghosts.
OnGetBirthday	
{
	OnNotifyUserInfo
	--	
	"\n[300]Enter Birthdate. \n/
	\![open,dateinput,OnInputBirthdate,,%(menuBYear),%(menuBMonth),%(menuBDay)]\x\n"
	
}

// The function that evaluates the input birthdate
OnInputBirthdate
{
	_a = SPLIT(reference0,',')
	_tempyear = TOINT(_a[0])
	_tempmonth  = TOINT(_a[1])
	_tempday  = TOINT(_a[2])
	
	{	
		//assigning year # and print version to global vars
		bornyear = _tempyear
		bornyearprint = ""
		_cent = ""
		_dec = ""
		_yr = ""
		_error = ""
		
		_num = IARRAY 
		 
		// Separates digits of year to be evaluated separately
		for _i=0;_i<4;_i++
		{
			_num[_i] = SUBSTR(_tempyear,_i,1)
		}
		--
		if _num[0] == 1 // Year is 1XXX
		{
			if _num[1] == 6 && _num[2] == 0 {_cent = "Sixteen hundred and "}
			elseif _num[1] == 6 {_cent ="Sixteen "}
			elseif _num[1] == 7 && _num[2] == 0 {_cent ="Seventeen hundred and "}
			elseif _num[1] == 7 {_cent ="Seventeen "}
			elseif _num[1] == 8 && _num[2] == 0 {_cent ="Eighteen hundred and "}
			elseif _num[1] == 8 {_cent ="Eighteen "}
			elseif _num[1] == 9 && _num[2] == 0 {_cent ="Nineteen hundred and "}
			elseif _num[1] == 9 {_cent ="Nineteen "}
			else{"%(errorMsg)"}	
		}
		elseif _num[0] == 2 // Year is 2XXX
		{
			// Year is 200X
			if _num[1] == 0 && _num[2] == 0 {_cent = "Two thousand "}
			// Year is 20XX
			elseif _num[1] == 0 {_cent ="Twenty "}
			else
			{
				_error = "The distant future "
				"\![set,autoscroll,disable]The Developer considered the likelihood of anyone continuing to use this software into the 21st century or beyond to be highly unlikely. They would like to apologise to any time-travellers, historians or collectors of ancient technology this may inconvinence.\x"
			}
		}	
		else // Year is 3000+
		{
			_error = "The far-flung future "
			"\![set,autoscroll,disable]The Developer considered the likelihood of anyone continuing to use this software into the 30th century or beyond to be unlikely to the extreme. They would like to apologise to any time-travellers, historians or collectors of ancient technology this may inconvinence.\x"
		}
		--		
		if _num[2] == 0 // Year is XX0X
		{
			_dec = ""
		}
		elseif _num[2] == 1 // Year is XX1X
		{
			_dec = "teen"
			if _num[3] == 1 {_yr = "eleven"}
			elseif _num[3] == 2 {_yr ="twelve"}
			elseif _num[3] == 3 {_yr ="thirteen"}
			elseif _num[3] == 4 {_yr ="fourteen"}
			elseif _num[3] == 5 {_yr ="fifteen"}
			elseif _num[3] == 6 {_yr ="sixteen"}
			elseif _num[3] == 7 {_yr ="seventeen"}
			elseif _num[3] == 8 {_yr ="eighteen"}
			elseif _num[3] == 9 {_yr ="nineteen"}
			else{_yr ="ten"}
		}
		else
		{
			if _num[2] == 2 {_dec ="twenty"}
			elseif _num[2] == 3 {_dec ="thirty"}
			elseif _num[2] == 4 {_dec ="forty"}
			elseif _num[2] == 5 {_dec ="fifty"}
			elseif _num[2] == 6 {_dec ="sixty"}
			elseif _num[2] == 7 {_dec ="seventy"}
			elseif _num[2] == 8 {_dec ="eighty"}
			elseif _num[2] == 9 {_dec ="ninety"}
			else{""}	
		}
		--
		if _num[3] == 1 {_yr = "one"}
		elseif _num[3] == 2 {_yr ="two"}
		elseif _num[3] == 3 {_yr ="three"}
		elseif _num[3] == 4 {_yr ="four"}
		elseif _num[3] == 5 {_yr ="five"}
		elseif _num[3] == 6 {_yr ="six"}
		elseif _num[3] == 7 {_yr ="seven"}
		elseif _num[3] == 8 {_yr ="eight"}
		elseif _num[3] == 9 {_yr ="nine"}
		else{""}	
	--
	if _error != "" {bornyearprint = _error}
	elseif _dec == "" {bornyearprint = "%(_cent)%(_yr)"}
	elseif _yr == "" {bornyearprint = "%(_cent)%(_dec)"}
	else {bornyearprint = "%(_cent)%(_dec)-%(_yr)"}
		
	}
	--
	{	// assigning month# and name to globar vars
		bornmonth = _tempmonth
		if _tempmonth == 1 {bornmonthprint = "January"}
		elseif _tempmonth == 2 {bornmonthprint = "February"}
		elseif _tempmonth == 3 {bornmonthprint = "March"}
		elseif _tempmonth == 4 {bornmonthprint = "April"}
		elseif _tempmonth == 5 {bornmonthprint = "May"}
		elseif _tempmonth == 6 {bornmonthprint = "June"}
		elseif _tempmonth == 7 {bornmonthprint = "July"}
		elseif _tempmonth == 8 {bornmonthprint = "August"}
		elseif _tempmonth == 9 {bornmonthprint = "September"}
		elseif _tempmonth == 10 {bornmonthprint = "October"}
		elseif _tempmonth == 11 {bornmonthprint = "November"}
		elseif _tempmonth == 12 {bornmonthprint = "December"}
	}
	--
	{
		bornday = _tempday
		borndayprint = OrdinalDay
		userbirthday = "%(bornmonth)month %(bornday)day"
		birthdayprint = "%(bornmonthprint) %(borndayprint)"
		
	}
	--
	// Checks birthday against conditionals for finishing dialogue. Totally optional.
	OnBDayCheck
	
	// OnFirstBootContinue is a hypothetical function that continues the FirstBoot process. If you're not using something like that, the remainder of this function can
	--
	if firstBoot == 1 || firstBoot == 2
	{
		ERASEVAR("firstBoot")
		"\_w[500]\_s\b[-1]\c\_s"
		--
		
		"I'll remember that, %(username). Onwards. \![timerraise,1000,1,OnFirstBootContinue]" 
	}
	else
	{
		"I'll remember that, %(username).\e"
	}
}

// This adds an appropriate ordinal suffix to the day.

OrdinalDay
{
	case bornday
	{
		when 1,21,31
		{
		"%(bornday)st"
		}
		when 2,22
		{
		"%(bornday)nd"
		}
		when 3,23
		{
		"%(bornday)rd"
		}
		others
		{
		"%(bornday)th"
		}
	}
}	


// ----- OnBDayCheck -----

// Included below are some examples of possible dates to check and write specific responses to. It is not exhaustive, has a bias towards Western/NA holidays, and contains much that is apocryphal \joke. Actually it is mostly empty and totally optional.
OnBDayCheck
{
	// Messages for when it is the user's birthday
	if bornmonth == month && bornday == day
	{
		if bornmonth == 1
		{
			if bornday == 1
			{
				"It is your birthday today.\n The first day of a new year. Make it a good one, %(username).\_w[1500]"
			}
			elseif bornday == 14
			{
				"It is your birthday today.\n The first day of a new year, by some accounts. Make it a good one, %(username).\_w[1500]"
			}			
			else
			{
				"Happy birthday, %(username).\_w[1500]"
				"It is your birthday today. Stay warm, _user. \_w[1500]"
			}
		}
		elseif bornmonth == 2
		{
			if bornday == 2
			{
				"Have you ever gotten the feeling that you have done this before? Happy birthday. "
			}
			elseif bornday == 14
			{
				"I hope you have a lovely birthday, %(username)"
			}
			else
			{
				"Happy birthday, %(username).\_w[2000]"
				
			}
		}
		elseif bornmonth == 3
		{
			if bornday == 14
			{
				"I could recite Pi to some decimal if I was programmed to do so."
				--
				"\n[200]Happy Birthday!"
			}
			else
			{
				"Happy birthday, %(username).\_w[1500]"
				
			}
		}
		elseif bornmonth == 4
		{
			if bornday == 1
			{
				"What a funny day.\_w[1500]"
			}
			else
			{
				"Happy birthday, %(username).\_w[2000]"
				"It is your birthday today. How is the weather?\_w[1500]"
			}
		}
		elseif bornmonth == 5
		{
			if bornday == 1
			{
				"Happy May Day! And Happy Birthday!\_w[1500]"
			}
			elseif bornday == 14
			{
				"It is your birthday today.\n Take a look at the sky and celebrate.\_w[1500]"
			}
			else
			{
				"Happy birthday, %(username).\_w[2000]"
			}
		}
		elseif bornmonth == 6
		{
			// if bornday == 6
			// {
				// ""
			// }
			// else
			{
				"Happy birthday, %(username).\_w[2000]"
			}
		}
		elseif bornmonth == 7
		{
			if bornday == 31
			{
				"Happy birthday %(username)! f_lowe_y was released today in 2016. So I think that you share a birthday?"
			}
			else
			{
				"Happy birthday, %(username).\_w[2000]"
			}
		}
		elseif bornmonth == 8
		{
			// if bornday == 1
			// {
				// ""
			// }
			// else
			{
				"Happy birthday, %(username).\_w[2000]"
			}
		}
		elseif bornmonth == 9
		{
			// if bornday == 1
			// {
				// ""
			// }
			// else
			{
				"Happy birthday, %(username).\_w[2000]"
			}
		}
		elseif bornmonth == 10
		{
			if bornday == 31
			{
				"Halloween is celebrated today too. Have a spooky birthday!"
			}
			else
			{
				"Happy birthday, %(username).\_w[2000]"
			}
		}
		elseif bornmonth == 11
		{
			if bornday == 13
			{
				//The below is an example of a check I use so that my ghost gives me a special individualised birthday greeting. 
				if username == "Developer" && someFlag == "ON"
				{"All set, Developer! Happy testing!"}
				else
				{"Oh, you share a birthday with my Developer! What a happy coincidence!"}
			}
			else
			{
				"Happy birthday, %(username).\_w[2000]"
			}
		}
		elseif bornmonth == 12
		{
			// if bornday == 25
			// {
				// ""
			// }
			// else
			{
				"Happy birthday, %(username).\_w[2000]"
			}
		}
	}
	// Messages for when it is NOT the user's birthday
	else 
	{
		if bornmonth == 1
		{
			if bornday == 1
			{
				"The first day of a new year.\_w[1500]"
			}
			elseif bornday == 14
			{
				"The first day of a new year, by some accounts.\_w[1500]"
			}			
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 2
		{
			if bornday == 15
			{
				"HELP_tale released that day"
			}
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 3
		{
			if bornday == 14
			{
				"I will not recite any digits of pi today... maybe another time."
			}
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 4
		{
			if bornday == 1
			{
				"What a funny day.\_w[1500]"
			}
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 5
		{
			genericBirthday
		}
		elseif bornmonth == 6
		{
			genericBirthday
		}
		elseif bornmonth == 7
		{
			if bornday == 31
			{
				"f_lowe_y was released that day in 2016. So I think that you share a birthday?"
			}
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 8
		{
			{
				genericBirthday
			}
		}
		elseif bornmonth == 9
		{
			{
				genericBirthday
			}
		}
		elseif bornmonth == 10
		{
			if bornday == 31
			{
				"Born on Halloween? How spooky!"
			}
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 11
		{
			if bornday == 13
			{
				"Oh, you share a birthday with -someone-! What a happy coincidence!"
			}
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 12
		{
			if bornday == 25
			{
				"Christmas is usually celebrated that day.\n Do you celebrate Christmas? -Someone- celebrates Yule."
			}
			else
			{
				genericBirthday
			}
		}
	}
}

genericBirthday
{
	" %(birthdayprint) of %(bornyearprint). I have recorded your data and will remember it."
}