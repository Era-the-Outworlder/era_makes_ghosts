/* ############# Boot, Close, and Change Functions ############# */




// ----- OnFirstBoot -----

// ┌───────┬────────────────────────────────────────────┐
// │ ref # │ Reference Contents                         │
// ╞═══════╪════════════════════════════════════════════╡
// │ 0     │ Number of times ghost has been uninstalled │
// │       │ (only applies to removal with OnVanish)    │
// └───────┴────────────────────────────────────────────┘
OnFirstBoot
{
	hourlyArray = IARRAY
	onetimeArray = IARRAY
	offscreenflag = IARRAY
	runhour = 0
	runmin = 0
	
	volume = 100
	"\0\s[0]\1\s[10]\p[2]\s[30]\![set,otherghosttalk,true]"
	--
	"\0This is my first time booting.\_w[500]"
	--
	if reference0 == 0
	{
		firstBoot = 1
	}
	elseif reference0 >= 1
	{
		firstBoot = 2
	}
	--
	OnTeachName
}
// \![raise,OnFirstBoot,1]


// ----- OnBoot -----

// ┌───────┬───────────────────────────────────────────────────────┐
// │ ref # │ Reference Contents                                    │
// ╞═══════╪═══════════════════════════════════════════════════════╡
// │ 0     │ Shell name                                            │
// │       │                                                       │
// │ 1-5   │ ~~unused~~                                            │
// │       │                                                       │
// │ 6     │ If previous startup failed, "Halt"                    │
// │       │                                                       │
// │ 7     │ If previous startup failed, name of ghost that failed │
// └───────┴───────────────────────────────────────────────────────┘

OnBoot
{
	hourlyArray = IARRAY
	runhour = 0
	runmin = 0
	
	"\0\s[0]\1\s[10]\p[2]\s[30]\![set,otherghosttalk,true]"
	--
	"\0I have booted.\_w[500]"
}


// ----- OnClose & OnCloseAll -----

// ┌───────┬────────────────────────────────────────────────────────────┐
// │ ref # │ Reference Contents                                         │
// ╞═══════╪════════════════════════════════════════════════════════════╡
// │ 0     │ Reason for termination                                     │
// │       │                                                            │
// │ 1     │ Scope number of the character used to initiate termination │
// └───────┴────────────────────────────────────────────────────────────┘


OnClose
{
	if (runhour == 0) && (runmin <= 5)
	{
		"Goodbye. Run Time: %(runhour):%(runmin).\_w[500]"
	}
 	else 
 	{
		if ghostexcount > 1
		{
			_num = RAND(ghostexcount)
			_pick = "%(ghostexlist[_num])"
			"Goodbye %USER. Goodbye %(_pick).Run Time: %(runhour):%(runmin).\_w[500]"
		}
		else
		{
			"Goodbye %USER.\_w[500]"
		}
 	}
	--
	if runhour > 1
	{
		cumuhour = (cumuhour + runhour)
	}
 	--
	ERASEVAR("hourlyArray")
	ERASEVAR("lastChoice")
	ERASEVAR("runsec")
	ERASEVAR("runmin")
	ERASEVAR("runhour")
	--
	"\-" 
}

OnCloseAll
{
	if ghostexcount > 0
	{
		"Goodbye everyone.\_w[500] "
	}
	else
	{
		"Goodbye, %(user).\_w[500] "
	}
	--
	case runhour
	{
		when 0
		{
			"I have been running for less than an hour."
		}
		when 1-4
		{
			"I have been running for %(runhour) hours"
		}
		when 5-11
		{
			"I have been running for %(runhour) hours"
		}
		when 12-16
		{
			"I have been running for %(runhour) hours"
		}
		when 17-20
		{
			"I have been running for %(runhour) hours"
		}
		when 21-23
		{
			"I have been running for %(runhour) hours"
		}
		others
		{
			"I have been running for %(runhour) hours. That's more than a full day."
		}
	}
	--
	if runhour > 1
	{
		cumuhour = (cumuhour + runhour)
	}
	--
	ERASEVAR("hourlyArray")
	ERASEVAR("lastChoice")
	ERASEVAR("runsec")
	ERASEVAR("runmin")
	ERASEVAR("runhour")
	--
	"\-"
}


// ----- OnGhostChanged -----

// ┌───────┬──────────────────────────────────────────────────┐
// │ ref # │ Reference Contents                               │
// ╞═══════╪══════════════════════════════════════════════════╡
// │ 0     │ Name of sakura/scope0 of previous ghost          │
// │       │                                                  │
// │ 1     │ Script played when switching from previous ghost │
// │       │                                                  │
// │ 2     │ Name of previous ghost                           │
// │       │                                                  │
// │ 3     │ Previous ghost's filepath                        │
// │       │                                                  │
// │ 4-6   │ ~~unused~~                                       │
// │       │                                                  │
// │ 7     │ Shell name of THIS GHOST                         │
// └───────┴──────────────────────────────────────────────────┘

OnGhostChanged
{
	hourlyArray = IARRAY
	"\![set,otherghosttalk,true]\0\s[0]"
	--
	_selfname = TOSTR(sakuraname)
	if reference0 == _selfname
	{
		runhour = 0
		runmin = 0
		"\0\s[0]\1\s[10]\p[2]\s[30]\0Reloaded\_w[500]"
	}
	else
	{
		"%(reference0) has unloaded.\_w[500]"
	}
	--
	"\e"
}


// ----- OnGhostChanging -----

// ┌───────┬──────────────────────────────────────────────────┐
// │ ref # │ Reference Contents                               │
// ╞═══════╪══════════════════════════════════════════════════╡
// │ 0     │ Name of sakura/scope0 of previous ghost          │
// │       │                                                  │
// │ 1     │ Switch type:                                     │
// │       │ "manual" (if switched by user)                   │
// │       │ "automatic" (if switched by system)              │
// │       │                                                  │
// │ 2     │ Name of previous ghost                           │
// │       │                                                  │
// │ 3     │ Previous ghost's filepath                        │
// └───────┴──────────────────────────────────────────────────┘

OnGhostChanging
{
	ERASEVAR("hourlyArray")
	_selfname = TOSTR(sakuraname)
	if reference0 == _selfname
	{
		ERASEVAR("lastChoice")
		"Reloading."
	}
	else
	{
		if runhour > 1
		{
			cumuhour = (cumuhour + runhour)
		}
		--
		ERASEVAR("hourlyArray")
		ERASEVAR("lastChoice")
		ERASEVAR("runsec")
		ERASEVAR("runmin")
		ERASEVAR("runhour")
		"Switching."
	}
	--
	"\e"
}


// ----- OnGhostCalled & OnGhostCallComplete -----
// OnGhostCalled is the event that plays when this ghost is called and finishes loading.
// OnGhostCallComplete is the event that plays when a newly called ghost completes its boot sequence, including playing OnGhostCalled, if it has it.

// ┌───────┬─────────────────────────────────────────────┐
// │ ref # │ Reference Contents                          │
// ╞═══════╪═════════════════════════════════════════════╡
// │ 0     │ Name of sakura/scope0 of ghost being called │
// │       │                                             │
// │ 1     │ Script played when incoming ghost is called │
// │       │                                             │
// │ 2     │ Name of called ghost                        │
// │       │                                             │
// │ 3     │ Called ghost's filepath                     │
// │       │                                             │
// │ 4-6   │ ~~unused~~                                  │
// │       │                                             │
// │ 7     │ Shell name of called ghost                  │
// └───────┴─────────────────────────────────────────────┘

OnGhostCalled
{
	runhour = 0
	runmin = 0
	hourlyArray = IARRAY
	"\![set,otherghosttalk,true]\0\s[0]"
	--
	OnDiscordPluginCustom
	--
	"\0\s[0]\1\s[10]\p[2]\s[30]\0Hello %(reference2)! I have been called.\_w[500]\e"
}

OnGhostCallComplete // After new ghost OnBoot finishes.
{
	"Hello %(reference0). %(username) decided you should join us. I agree with %(oblPro). \_w[500]"
}


// ----- OnGhostCalling -----
// OnGhostCalling plays when the called ghost is invoked. 
// If the script is too long, it may not finish before the called ghost finishes booting.

// ┌───────┬──────────────────────────────────────────────────┐
// │ ref # │ Reference Contents                               │
// ╞═══════╪══════════════════════════════════════════════════╡
// │ 0     │ Name of sakura/scope0 of previous ghost          │
// │       │                                                  │
// │ 1     │ Switch type:                                     │
// │       │ "manual" (if switched by user)                   │
// │       │ "automatic" (if switched by system)              │
// │       │                                                  │
// │ 2     │ Name of previous ghost                           │
// │       │                                                  │
// │ 3     │ Previous ghost's filepath                        │
// └───────┴──────────────────────────────────────────────────┘

OnGhostCalling 
{
	"I will call %(reference2) for you.\_w[500]"
	--
	"%(REFTEST('OnGhostCalling'))"
}


// ----- OnOtherGhostBooted -----

// ┌───────┬─────────────────────────────────────────────┐
// │ ref # │ Reference Contents                          │
// ╞═══════╪═════════════════════════════════════════════╡
// │ 0     │ Name of sakura/scope0 of the launched ghost │
// │       │                                             │
// │ 1     │ Startup script of launched ghost            │
// │       │                                             │
// │ 2     │ Name of started ghost                       │
// │       │                                             │
// │ 3-6   │ Called ghost's filepath                     │
// │       │                                             │
// │ 7     │ Shell name of launched ghost                │
// └───────┴─────────────────────────────────────────────┘

OnOtherGhostBooted
{
	"Hello %(reference0). %(username) decided you should join us.\_w[500]"
}


// ----- OnOtherGhostChanged -----

// ┌───────┬────────────────────────────────────────────────────┐
// │ ref # │ Reference Contents                                 │
// ╞═══════╪════════════════════════════════════════════════════╡
// │ 0     │ Name of sakura/scope0 of the previous ghost        │
// │       │                                                    │
// │ 1     │ Name of sakura/scope0 of the incoming ghost        │
// │       │                                                    │
// │ 2     │ The script the previous ghost played while leaving │
// │       │                                                    │
// │ 3     │ Boot/Switch-in script of incoming ghost            │
// │       │                                                    │
// │ 4     │ Previous ghost name                                │
// │       │                                                    │
// │ 5     │ Incoming ghost name                                │
// │       │                                                    │
// │ 6-13  │ ~~unused~~                                         │
// │       │                                                    │
// │ 14    │ Shell name of previous ghost                       │
// │       │                                                    │
// │ 15    │ Shell name of incoming ghost                       │
// └───────┴────────────────────────────────────────────────────┘

OnOtherGhostChanged
{
	"A ghost other than myself has been replaced by yet a third ghost. \nGood-bye %(reference0). \nHello %(reference1).\_w[500]"
}


// ----- OnOtherGhostClosed -----

// ┌───────┬────────────────────────────────────────────────┐
// │ ref # │ Reference Contents                             │
// ╞═══════╪════════════════════════════════════════════════╡
// │ 0     │ Name of sakura/scope0 of the ghost that closed │
// │       │                                                │
// │ 1     │ Closing script of the ended ghost              │
// │       │                                                │
// │ 2     │ Name of closed ghost                           │
// │       │                                                │
// │ 3-6   │ ~~unused~~                                     │
// │       │                                                │
// │ 7     │ Shell name of closed ghost                     │
// └───────┴────────────────────────────────────────────────┘

OnOtherGhostClosed
{
	"A ghost other than myself has closed. \nGood-bye %(reference0).\_w[500]"
}


// ----- OnBasewareUpdating & OnBasewareUpdated -----
// OnBasewareUpdating plays before the ghost closes and file update starts
// OnBasewareUpdated plays when the ghost restarts ofter the file update occurs

// ┌───────┬─────────────────────────────────────────────────────────────┐
// │ ref # │ Reference Contents                                          │
// ╞═══════╪═════════════════════════════════════════════════════════════╡
// │ 0     │ Current Version Number when event is called                 │
// │       │                                                             │
// │ 1     │ Version number as shown in Windows Explorer file properties │
// └───────┴─────────────────────────────────────────────────────────────┘

OnBasewareUpdating
{
	"Updating Baseware %(baseware)...\_w[1000]"
}

OnBasewareUpdated
{
	"\_w[500]Baseware %(baseware) Update complete.\_w[1000]"
}


// ----- OnWindowState*, OnFullScreenApp*, Restore/Minimize -----
// ┌───────┬────────────────────────────────────────────────────────────────────────┐
// │ ref # │ Reference Contents                                                     │
// ╞═══════╪════════════════════════════════════════════════════════════════════════╡
// │ 0     │ Reason ghost was minimised:                                            │
// │       │ "system", if from OS source, including menu from taskbar               │
// │       │ "script" if from SakuraSript                                           │
// │       │ "sakuraapi" if form Sakura API                                         │
// │       │ "user" if from user draw menu                                          │
// │       │ "fullscreen" if from OnFullScreenAppMinimize or OnFullScreenAppRestore │
// └───────┴────────────────────────────────────────────────────────────────────────┘

OnWindowStateRestore
{
	"\0\s[0]\1\s[10]\p[2]\s[30]\0This is the dialogue that plays when I have been restored to fullscreen after being minimised to the taskbar.\_w[500]"
}

OnWindowStateMinimize
{
	"I have been commanded to minimise to the taskbar. This dialogue will play before I complete that action.\_w[500]"
}

OnFullScreenAppMinimize
{
	"%(REFTEST('OnFullScreenAppMinimize'))"
}

OnFullScreenAppRestore
{
	"%(REFTEST('OnFullScreenAppRestore'))"
}


// ----- OnVirtualDesktopChanged -----

// ┌───────┬─────────────────────────────────────────────────────────────────┐
// │ ref # │ Reference Contents                                              │
// ╞═══════╪═════════════════════════════════════════════════════════════════╡
// │ 0     │ Dekstop/ghost state: (as of Aug 25 2022)                        │
// │       │ "current", if the ghost is on the current virtual desktop       │
// │       │ "hidden", if the ghost is on an inactive/hidden virtual desktop │
// │       │ "minimize" the ghost has been minimized AND                     │
// │       │ it is unknown which virtual desktop it belongs to               │
// │       │                                                                 │
// │ 1     │ Current virtual desktop ID                                      │
// └───────┴─────────────────────────────────────────────────────────────────┘

OnVirtualDesktopChanged
{
	"%(errorMsg)\_w[500]\e"
}


// ----- OnCacheSuspend, OnCacheRestore -----
// No Reference values

OnCacheSuspend
{
	"%(errorMsg)\_w[500]\e"
}

OnCacheRestore
{
	"%(errorMsg)\_w[500]\e"
}


// ----- OnInitialize, OnDestroy -----
// NOTIFY Events

// ┌───────┬─────────────────────────────────────────────┐
// │ ref # │ Reference Contents                          │
// ╞═══════╪═════════════════════════════════════════════╡
// │ 0     │ "reload" when reloading, otherwise no value │
// └───────┴─────────────────────────────────────────────┘

OnInitialize
{
	
}

OnDestroy
{
	
}


// ----- OnSysResume -----

// ┌───────┬─────────────────────────────────────────────────────────┐
// │ ref # │ Reference Contents                                      │
// ╞═══════╪═════════════════════════════════════════════════════════╡
// │ 0     │ Reason system sleep/hibernation was ended:              │
// │       │ "normal" if ended normally                              │
// │       │ "auto" if cancelled by system schedule                  │
// │       │ "critical" if due to low battery (Win Vista or earlier) │
// └───────┴─────────────────────────────────────────────────────────┘

OnSysResume
{
	"%(errorMsg)\_w[500]\e"
}

// ----- OnSysSuspend -----
// No Reference values

OnSysSuspend
{
	"%(errorMsg)\_w[500]\e"
}



