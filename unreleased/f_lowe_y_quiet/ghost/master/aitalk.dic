//---------------------------AI Talk--------------------------
//Alright, this is it! The bread and butter of your ghost. This is where all their random conversations are stored. Of all the .dic files, this is the one you will probably be adding stuff to and updating the most as new dialogue comes to your mind. It is relatively simple in that there aren't many functions or real coding involved with this file, but there are a few cool tricks you can do within randomtalk that can make dialogue with interesting effects, so I'll point them out as we go along.
//I'm going to leave a lot of examples of different types of dialogue in here that you can study if the possibilities they present intrigue you. Study them carefully!



//--AiTalk
AiTalk
 {
	if RAND(100) < communicateratio
 	{
 		StartCommunicate
	}
 	else
	{
 		if mikireflag == 0
		{
			if CHAIN.IDName == "" {
 				lastTalk = RandomTalk
			}
			else {
				lastTalk = ChainTalk
			}
			lastTalk
		}
 		else
		{ 
		MikireTalk
 		}
	}
 }


//--RandomTalk 
	//Randomised Dialogue

RandomTalk : nonoverlap
{
	
	"\0\s[0] * (Smells like herbicide.)\w8\w8\s[0]\e"
	
	"\0\s[0] * You you you how how how\w8\w8\c\s[0]Howdy, %(username)!\w8\w8\s[0]\e"
	
	"\0\s[0] * (F_lowe_y asks if you remember something.) \w8\c\s[1] * (It seems he's mistaken you for someone else.)\w8\w8\s[0]\e"
	
	//testing all surfaces
	"\0\s[0] * (You say hello. He doesn't seem to be listening)\w8\w8\s[0]\e"
	
	"\0\s[1] * Howdy! \w8\w8\s[0]\e"
	
	"\0\s[2] * (You caught the flower by surprise.)\w8\w8\s[0]\e"
	
	"\0\s[3] * You... are...? \w8\w8\s[0]\e"
	
	"\0\s[4] * (Something seems to be wrong.) \w8\w8\s[0]\e"
	
	"\0\s[5] * Howdy! \w8\w8\s[0]\e"
	
	"\0\s[6] * (You give the flower a hug.) \w8\w8\s[0]\e"
	
	"\0\s[7] * YOU! STOP!\w8\w8\w8\s[0]\e"
	
	"\0\s[8] * (You feel him judging you.) \w8\w8\s[0]\e"
	
	"\0\s[9] * Don't.Don't.Don't.Don't.Don't.\w8\w8\w8 h_ve _nything bette_ to do?\w8\w8\s[0]\e"
	
	"\0\s[12] * (F_lowe_y is looking at something.) \w8\w8\s[0]\e"
	
	"\0\s[13] * .... you you you... friend. \w8\w8\s[0]\e"
	
	"\0\s[14] * (F_lowe_y is looking at something. It's not you.) \w8\w8\s[0]\e"
	
	"\0\s[15] * What?! No. \w8\w8\s[0]\e"
	
	"\0\s[16] * (You hit the flower. Since you didn't do it on purpose, it doesnt hurt him.)\w8\w8\s[0]\e"
	
	"\0\s[17] * WHY WHY WHY WHYWHYWHY _HY _ON'T YOU LET ME _IN?!\w8\w8\s[0]\e"
	
	"\0\s[13] It's all a nightmare... \w8\w8\c\w8\s[16]AND WE'RE NEVER WAKING UP!!!!!!\w8\w8\w8\w8\w8\c %(floweyLaugh)\c\w8\s[0]\e"
	
	
	//--Chains
	//Chain dialogue is unique. A dialogue chain consists of multiple bits of dialogue that get called in order over a period of time.
	
	"\0\s[0] * Finally. \s[0]\e:chain=firstchain"
	
	if RAND(100) >= 49
	{
	"\0\s[6] * Where oh where oh where oh where \w8\w8\w8 my cccchhhhiiiillllldddd\w8\w8\w8\s[0]\e:chain=torichain1"
	}
	else
	{
	"\0\s[6] * Where oh where oh where oh where \w8\w8\w8 It's so cold. So cold.\w8\w8\w8\s[0]\e:chain=torichain2"
	}
	//Note here that instead of ending the dialogue with the normal end tag of \s[0]\e, it ends with \s[0]\e:chain=firstchain. This will link down below to a chunk of code outside RandomTalk called firstchain. You can scroll down and find it now if you want. You can name your chain anything you want, it'd just follow the same format of \s[0]\e:chain=yourchainsname, and you can have a long series of chains as well. Once a dialogue has entered a chain, they won't say any other random dialogue until the chain is finished.
	
	
	//Here, this chain will link to another chain to continue the conversation. You can scroll down to the section on chains to see this in action.
	
	
	//--If statements
	//You can put if statements in RandomTalk! They don't even need Else statements, unless you want to keep two sets of statements completely separate - for example, you have one pool of conversations for when there are two characters, and one for if there are three characters. You wouldn't want these to overlap, so you'd put one pool in the if statement and the other in the else. Most of the time though, you won't need an Else statement for these, since they'll mostly only be adding in dialogue if the if statement is true. 
	//So you can use these to check for any number of situations. I think this feature is really neat, so I'm going to set up some quick default responses for the months, days, and time of day. If you don't want to do these, you can just delete this whole set of ifs down to the //--Double Envelopes section below.
	//You can also nest ifs within these, so you could check if it was the 25 of April in the morning for example. You can also add or take away dialogue from these as you like, so if you want to have five dialogue options for April or one for January, you can totally do that.
	
	if month == 1
	{
		"\0\s[0] * January.\s[0]\e"
		"\0\s[0] * New. New. New. New. Year. New Year. New year. new year. Happy. \n H A P P Y NEW YEAR\s[0]\e"
		"\0\s[0] * (Celebratory noises)\s[0]\e"
	}
	if month == 2
	{
		"\0\s[0] * February.\s[0]\e"
		"\0\s[0] * Love. LOVE. LV. Celebrate LV. Right?\s[0]\e"
		
	}
	if month == 3
	{
		"\0\s[0] * March.\s[0]\e"
		"\0\s[0] * Third month. Third month. Th- Thi- Th- The start of spring.\s[0]\e"
		
	}
	if month == 4
	{
		"\0\s[0] * April.\s[0]\e"
		"\0\s[0] * 4 4 4 4 FOUR four Fourth month\s[0]\e"
		
	}
	if month == 5
	{
		"\0\s[0] * May.\s[0]\e"
		"\0\s[0] * The fifth month.\s[0]\e"
		"\0\s[0] * May flowers. Flowers. Flowers are blooming!\s[16]\w8\c\s[0] * Howdy! I'm F_lowe_y the flower!\w8\s[0]\e"
		
	}
	if month == 6
	{
		"\0\s[0] * June.\s[0]\e"
		"\0\s[0] * Hot.Hot.Hot.Not.Not.Not.\s[0]\e"
		
	}
	if month == 7
	{
		"\0\s[0] * July.\s[0]\e"
		"\0\s[0] * Is it summer yet? \s[0]\e"
	}
	if month == 8
	{
		"\0\s[0] * August.\s[0]\e"
	}
	if month == 9
	{
		"\0\s[0] * September.\s[0]\e"
	}
	if month == 10
	{
		"\0\s[0] * October.\s[0]\e"
		"\0\s[0] * Halloween. Humans in monster suits.\w8\w8\n\s[8] * Funny.\s[0]\e"
	}
	if month == 11
	{
		"\0\s[0] * November.\s[0]\e"
		"\0\s[0] * Thank_giving?\s[0]\e"
	}
	if month == 12
	{
		"\0\s[0] * December.\s[0]\e"
		"\0\s[0] * Merry.Merry.Merry.Merry.Merry.Merry.Merry.Merry.Merry.Merry.Merry.Merry.Merry.\s[0]\e"
	}
	// These ifs check what day of the week it is.
	// if weekday == 1
	{
		"\0\s[0] * Monday.\s[0]\e"
		
	}
	if weekday == 2
	{
		"\0\s[0] * Tuesday.\s[0]\e"
	}
	if weekday == 3
	{
		"\0\s[0] * Wednesday.\s[0]\e"
	}
	if weekday == 4
	{
		"\0\s[0] * Thursday.\s[0]\e"
	}
	if weekday == 5
	{
		"\0\s[0] * Friday.\s[0]\e"
	}
	if weekday == 6
	{
		"\0\s[0] * Saturday.\s[0]\e"
	}
	if weekday == 7
	{
		"\0\s[0] * Sunday.\s[0]\e"
	}
	// //These ifs check for the time of day as defined in bootend.dic. Do you remember the words used for each chunk of time in GetTimeSlot? These are the same words!
	if timeslot == "earlymorning"
	{
		"\0\s[0] * Early morning.\s[0]\e"
	}
	if timeslot == "morning"
	{
		"\0\s[0] * Morning.\s[0]\e"
	}
	if timeslot == "lunch"
	{
		"\0\s[0] * Lunch time.\s[0]\e"
	}
	if timeslot == "afternoon"
	{
		"\0\s[0] * Afternoon.\s[0]\e"
	}
	if timeslot == "evening"
	{
		"\0\s[0] * Evening.\s[0]\e"
	}
	if timeslot == "latenight"
	{
		"\0\s[0] * Late night.\s[0]\e"
	}
	if timeslot == "midnight"
	{
		"\0\s[0] * Midnight.\s[0]\e"
	}
	
	
	
	
	"\0\s[0]\s[-1]\w8\w8\w8\w8\w8\w8 * Flowey ran away.\w8\w8\c\w8\w8\b2\f[height,100] Die.\w8\w8\w8\w8\c\f[height,default]\e"
	
	
	
	//"\0\s[0] *\f[strike,true]These words are struck out.\f[strike,default]\w8\0\s[0]\f[sub,true]These words are a subscript.\f[sub,false] \f[sup,true]These words are a superscript.\f[sup,false] \f[underline,true]These words are underlined.\f[underline,default] \f[bold,true]These words are bold.\f[bold,false] \f[italic,true]These words are italic.\f[italic,false] \f[color,186,146,112]These words are a color.\f[color,default] This tag would return to default.\f[default]\s[0]\e"
	//For the \f[color] tag, the three colors listed are the RGB values of the color you want to use for your text. Change them to whatever color you want to use. \f[default] can be an easy way to quickly go back to the default word setting in your balloon after messing with colors and effects a lot.
	//Along the same lines as above, you can use \_a[address] to link to certain things. Note that it ends with \_a to close the link. It's very similar to <a href=address> and </a> in html.
	
}


//--Chains
//Here is where the chain dialogue lives.

firstchain
{{CHAIN
	"\0\s[4] * Tired. I'm so tired. Tired. Tired of being a flower.\s[0]\e:chain=secondchain"
}}CHAIN


secondchain
{{CHAIN
	"\0\s[0] * %(username), are you there? \s[0]\e:chain=thirdchain"
}}CHAIN

thirdchain
{{CHAIN
	"\0\s[0] * It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.It's me.\w8\c\s[1]\_q * It's me, your best friend.\s[0]\e:chain=end"
}}CHAIN

torichain1
{{CHAIN
	"\0\s[6] * I've been looking. \w8Looking. \w8\w8\w8 All over for you.\w8\w8\w8\s[0]\e:chain=torichain12"
}}CHAIN

torichain12
{{CHAIN
	"\0\s[12] * Hee hee hee. \w8\w8\w8Is that what you wanted to hear? \w8\w8\w8You'll NEVER see her again.\w8\w8\w8\s[0]\e:chain=end"
}}CHAIN

torichain2
{{CHAIN
	"\0\s[6] * It's so dark. \w8Where am I? \w8\w8\w8Someone help me...\w8\w8\w8\s[0]\e:chain=torichain22"
}}CHAIN

torichain22
{{CHAIN
	"\0\s[6] * Anyone... \w8Please... \w8\w8\w8Help\w8\w8\w8\s[0]\e:chain=end"
}}CHAIN


//-OnMinuteChange
//These are time-related bits of dialogue for the ghost to say. 

OnMinuteChange
 {
	timeslot = GetTimeSlot //this tells the ghost what time it is so the time related conversations above will work.
	--
 	if minute == 0 //These check what time it is. Here, it's seeing if the minute equals zero...
	{
 		if hour == 12 //And the hour equals 12, ie it's noon. You can change this to some other hour if you want.
		{
 			"\0\s[0] * It's noon.\s[0]\e"
			
		}
 		elseif hour == 0 //If the hour is zero, aka midnight. Again, you can change this to whatever hour you want to check for.
		{
 			"\0\s[0] * It's midnight!\s[0]\e"
 		}
		elseif hour == 23 //if the hour is 23, aka 11 pm.
		{
			if minute == 55 //And if the minutes are at 55.
			{
				"\0\s[0] * 5 minutes to midnight.\s[0]\e"
			}
			else 
			{
				""
			}
		}
		elseif hour == 7 && minute == 30 && weekday == 0 //Here, it's checking for a specific time on a specific day. You can add things to your time checks just like this by using the AND operator, &&. This adds up to 7:30, Sunday. If you have a favorite TV program on at some time, you could have your ghost comment on when it comes on like this.
		{
			"\0\s[0] * It's 7:30 on Sunday.\s[0]\e"
			//Replace with what's appropriate.
		}
		
		else
		{
			"\0\s[0] * %(hour12) hours.\s[0]\e"
			//%(hour12) stores the time. This is a general top of the hour notification. I personally like this because it helps me keep track of time when I've been working on something, so when a ghost is all "Hey it's 3 o clock" I can be like woah really when did that happen. If you think this is annoying though, you can just delete this bit of dialogue to leave this else statement blank, or leave "" in here instead.
		}
	}
	//Don't touch this part.
	elseif mikireflag == 1
 	{
 		MikireTalk
	}
 }

//--OnSecondChange
//Like the above, this handles what happens every time a second goes by. Most of this you will not have to touch.

OnSecondChange
 {
	if passsec == 60
 		{
	 	passsec = 0
 		passmin = passmin + 1
		}
 	else
 		{
	 	passsec = passsec + 1
		}
	if mikireflag == 1 && reference1 == 0
		{
			EndMikireTalk
 		}
		mikireflag = reference1
	if reference2 == 1
	{
 		//This dialogue is for when the two characters are overlapping each other. If you don't want your characters to care, you can just leave this blank.
		
 		""
		
	}
 }

 //---- MikireTalk ---------------------------------------------------------------------
 //I'm actually a little fuzzy on MikireTalk and what exactly it does since it shows up a lot in odd places, but for the purposes of this function here, what this does is bring up some dialogue when the main character is off the screen. For example, if you dragged Girl over to the side of your monitor until she was partially concealed by it. This dialogue would then come up. If you don't want your characters to care, you can leave the dialogue blank.
 
MikireTalk
 {
	 if RAND(100) < 50 
	 {
		rescue = 1
		"\0\s[15] * No. No. No. No. No. No. Back. Back. Back.\n * Ctrl-Shift-F12 to bring back.\w8\w8\s[0]\e"
		
	 }
	 else
	 {
		 rescue = 0
		"\0\s[15] * (F_lowe_y seems distressed.)\n\n * (Press Ctrl-Shift-F12 to ease his pain.)\w8\w8\s[0]\e"
	 }
	//Note the hotkey combo Triangle mentions. He's telling the truth, that should bring her back on the screen.
 }

 //----EndMikireTalk--------------------------------------------------------------------
 //For after you bring the character back on screen.
 
EndMikireTalk
 {
	 if  rescue == 1 
	 {
		 rescue = 0
		"\0\s[6] * Back. Good. Thank.\w8\s[0]Thank. Thank. Thank. Thank. Thank.\w8\w8\s[0]\e"
	 }
	 else
	 {
		 rescue = 0
		"\0\s[6] * (F_lowe_y looks relieved.)\w8\w8\w8\s[0]\e"
	 }
}


//**** OnSurfaceRestore *****************************************************************
//OnSurfaceRestore is a handy function. What this does is that after a short period of time, the ghost will go back to its default pose, so you won't have a ghost stuck in one expression for too long. It's also helpful if you've made one of the characters disappear using \s[-1] in dialogue and didn't bring them back at the end of it. This will do that for you.


OnSurfaceRestore
 {
 	
	"\0\s[0]\e"
	
 }

 
 //--OnKeyPress
 //This defines the hotkeys your ghost will use. You can change these to whatever you want, but I don't really know why you would. I'd just leave this alone. Advanced Users can add new hotkeys attached to whatever function if you want.
 
OnKeyPress
{
	if reference0 == "t"
	{
	OnAiTalk
	}
	elseif reference0 == "r"
	{
	OnLastTalk
	}
	elseif reference0 == "f1"
	{
	"\![open,readme]"
	}
}