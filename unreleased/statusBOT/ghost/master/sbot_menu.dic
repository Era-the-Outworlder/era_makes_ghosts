
// [..       [..[........[...     [..[..     [..
// [. [..   [...[..      [. [..   [..[..     [..
// [.. [.. [ [..[..      [.. [..  [..[..     [..
// [..  [..  [..[......  [..  [.. [..[..     [..
// [..   [.  [..[..      [..   [. [..[..     [..
// [..       [..[..      [..    [. ..[..     [..
// [..       [..[........[..      [..  [.....   

// -------- Menus --------
//This .dic file is primarily concerned with the double-click menu.


// ---- OnMenuRun ----
// As you just saw above. This actually fills out the rest of the menu.

OnMenuRun
{	
	"%(sbot)\0\b2\![set,autoscroll,disable]" 
	--
	"\![*] \q[Discord Rich Presence,OnDRPMenu,menu]\n"
	--
	"\![*] \q[User Settings,OnUserConfig]\n"
	--
	"\![*] \q[sBOT Settings,OnConfigMenu]\n"
	--
	"\![*] \q[Other Functions,OnFunctionMenu]\n\n[half]"
	--
	"%(disDate) %(disTime)\n"
	--
	"v%(OnGhostVer)\n"
	--
	if lastUpDate
	{
		"Last Updated: %(lastUpDate)\n"
	}
	else
	{
		"\n"
	}
	--
	if reference0 == "firstboot"
	{
		""
	}
	elseif eraDebug == "ON"
	{
		"\![*] \q[Test variable,OnTestVariable]\n"
		--
		"\![*] \q[Close Menu,CANCEL]\e"
	}
	else
	{
		"\![*] \q[Close Menu,CANCEL]\e"
	}
	
}



OnLastTalk 
{
	"%(lastTalk)\e"
}


// -------- OnUserConfig --------
// This menu allows the user to change their name and other information

OnUserConfig
{
	"\0\b[2]\![set,autoscroll,disable]\_q" 
	--
	"\f[height,14]\![*](\q[Edit,OnTeachName,menu])\f[height,19]NAME:\f[height,default]\f[color,ccffff] %(username)\f[default]\n"
	--
	"\f[height,14]\![*](\q[Edit,OnGetBirthday,menu])\f[height,19]PRONOUNS:\f[height,default]\n\f[color,bbffff]%(nomPro)/%(oblPro)/%(posPro)\f[default]\n"
	--
	"\f[height,14]\![*](\q[Edit,OnGetBirthday,menu])\f[height,19]BIRTHDAY:\f[height,default]\n\f[color,aaffff]%(birthdayprint)\f[default]\n"
	--
	"\![*] \q[sBOT Settings,OnConfigMenu]\n"
	--	
	"\![*] \q[Main Menu,OnMenuRun]\n"
	--
 	"\![*] \q[Close,CANCEL]"
	--
	if username == "Era" 
	{
		"\nSet Debug? "
		--
		if eraDebug == "ON"
		{
			"\f[color,#0099cc]\![*] \q[ON,eDBon] \f[color,default]--- \![*] \q[OFF,eDBoff] \f[align,left]"
		}
		else
		{
			"\![*] \q[ON,eDBon] --- \f[color,#f0099cc]\![*] \q[OFF,eDBoff]\f[color,default] \f[align,left]"
		}
	}
	--
	"\e"
}

// ---- OnConfigMenu ----
// Allows user to change various ghost settings
OnConfigMenu
{
	"\0\b[2]\![set,autoscroll,disable]\_q" 
	--
	"\f[height,15]\![*]\q[(Edit),OnSetTalk] \f[height,default]TALK RATE: \f[height,19]%(talksetting)\f[height,default]\n"
	--
	
	"Enable Silent Mode?\n "
	--
	if silentMode == "ON"
	{
		"\f[align,center]\f[color,#0099cc]\![*]\q[ON,silenton]\f[color,default] ----- \![*]\q[OFF,silentoff]\n \f[align,left]"
	}
	else
	{
		"\f[align,center]\![*]\q[ON,silenton] ----- \f[color,#0099cc]\![*]\q[OFF,silentoff]\f[color,default]\n \f[align,left]"
	}
	--
	
	"Confirm Recycle Bin?\n "
	--
	if verBalete == "ON"
	{
		"\f[align,center]\f[color,#0099cc]\![*]\q[ON,verBinOn]\f[color,default] ----- \![*]\q[OFF,verBinOff]\n \f[align,left]"
	}
	else
	{
		"\f[align,center]\![*]\q[ON,verBinOn] ----- \f[color,#0099cc]\![*]\q[OFF,verBinOff]\f[color,default]\n \f[align,left]"
	}
	--
	"Enable Uninstall?\n "
	--
	if deleteshitai == "ON"
	{
		"\f[align,center]\f[color,#0099cc]\![*]\q[ON,deleteon]\f[color,default] ----- \![*]\q[OFF,deleteoff]\n[half] \f[align,left]"
	}
	else
	{
		"\f[align,center]\![*]\q[ON,deleteon] ----- \f[color,#0099cc]\![*]\q[OFF,deleteoff]\f[color,default]\n[half] \f[align,left]"
	}
	--
	"\n[half]\![*] \q[User Settings,OnUserConfig]\n"
	--
	"\f[align,center]\![*] \q[Main Menu,OnMenuRun] ---------- \![*] \q[Close,CANCEL]"
	--
	"\e"
}


// Private Debug Mode, nothing interesting here
Select.eDBon
{
	eraDebug = "ON"
	OnUserConfig
}

Select.eDBoff
{
	eraDebug = "OFF"
	OnUserConfig
}

// Enable/Disable Verbose emptying recycle bin
Select.verBinOn
{
	verBalete = "ON"
	OnConfigMenu
}

Select.verBinOff
{
	verBalete = "OFF"
	OnConfigMenu
}

// Enable/Disable Silent Mode
Select.silenton
{
	silentMode = "ON"
	OnConfigMenu
}

Select.silentoff
{
	silentMode = "OFF"
	OnConfigMenu
}

// Enable/Disable Uninstall
Select.deleteon
{
	deleteshitai = "ON"
	OnConfigMenu
}

Select.deleteoff
{
	deleteshitai = "OFF"
	OnConfigMenu
}




// ---- Talk Rate ----
// This is when the user chooses to adjust the talk rate in the config menu. The talk rate is how often the ghost will read some dialogue from aitalk.dic.

OnSetTalk
{
	"\b2\0"
	--
	"I do not have much to say, but I can, if you want.\nHow often would you like me to talk?"
	--
	
	"\0\n\n[half]/
	\![*] \q[ Don't Talk,OnTalkNot]\n/
	\![*] \q[ Every 15 minutes,talkFifteen]\n/
	\![*] \q[ Every 30 minutes,talkThirty]\n"
	--
	'\![*] \q[ Custom Time,"script:\![open,sliderinput,OnTalkCustom,,%(minutetalk),0,60]"]\n'
	--
	"\![*] \q[ Random Time,OnTalkRandom]\n\n[half]/
	\![*] \q[ Don't change,TalksTill]"
}

// If the user chooses to not have them speak.
OnTalkNot
	{
		minutetalk = 0
 		talksetting = "never"
		aitalkinterval = 0
		
		"..."
	}
	
// User decides not to change setting
Select.TalksTill
	{
		"I will do as I was before, then.."
	}


// If the user chooses every fifteen minutes. This is the default rate set in bootend.dic.
Select.talkFifteen
	{
		minutetalk = 15
 		talksetting = "15 minutes"
		aitalkinterval = 900
		
 		"15 minutes."
	}
	

Select.talkThirty
	{
		minutetalk = 30
 		talksetting = "30 minutes"
		aitalkinterval = 1800
		
 		"30 minutes."
	}
	
	
OnTalkCustom
	{
		minutetalk = reference0
		if minutetalk != 0
 		{
			talksetting = "%(minutetalk) minutes"
			aitalkinterval = (minutetalk * 60)
			
			"%(minutetalk) minutes."
		}
		else
 		{
			talksetting = "never"
			aitalkinterval = 0
			
			"%(minutetalk) minutes."
		}
 		
	}


OnTalkRandom
	{
		minutetalk = (RAND(60) + 1)
		talksetting = "%(minutetalk) minutes"
		aitalkinterval = (minutetalk * 60)
		
		"%(minutetalk) minutes."
	}	
	

	
OnFunctionMenu
{

	"\0\b2Listing Functions:\n\n[half]"
	
	--
	"\![*] \q[Open Calendar,CALENDAR]\n/
	\![*] \q[Check Email,MailCheck]\n/
	\![*] \q[Open SSP Preferences,sspconfig]\n/
	\![*] \q[Empty Recycle Bin,OnRecycleStart]\n/
	\![*] \q[System Information,OnRunCPUID]\n/
	\![*] \q[View Ghost Changelog,OnChangeLog,menu]\n/
	\![*] \q[Main Menu,OnMenuRun]\n"
	--
	if username == "Era" || username == "BugTest"
	{
		"\f[align,center]\![*] \q[Test variable,OnTestVariable] \![*]"
	}
	else
	{
		"\e"
	}
}

// If the user selects cancel in a menu.
Select.CANCEL
{
	"Closing Menu"
}

//When the user clicks Open Calender.
Select.CALENDAR
{
	"Opening Calendar.\![open,calendar]"
}

//When the user chooses SSP preferences.
Select.sspconfig
{
	"Opening the SSP preferences menu.\![open,configurationdialog]"
}
	
//This is when the user chooses to check their email. The rest of this function plays out in etc.dic.
Select.MailCheck
{
	"\![biff]\e"
}



//---- OnChoiceTimeout ----
// Called every time a choice is timed out, not just the main menu.

OnChoiceTimeout
 {
	"Hm."
 }
